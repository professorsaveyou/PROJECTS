% MATLAB code to design a high-order FIR lowpass filter using the window method

% Specifications
Fs = 8000;                   % Sampling frequency in Hz
Fp = 1000;                   % Passband edge in Hz
Fs_stop = 1500;              % Stopband edge in Hz
Rp = 0.01;                   % Passband ripple (linear)
Rs = 60;                     % Stopband attenuation in dB

% Normalized frequencies (0 to 1, where 1 corresponds to the Nyquist frequency)
Wp = Fp / (Fs / 2);          % Normalized passband edge
Ws = Fs_stop / (Fs / 2);     % Normalized stopband edge

% Estimate the filter order using the Kaiser formula
delta_f = Ws - Wp;           % Transition width
A = -20 * log10(Rp);         % Attenuation in dB (from ripple level)

% Calculate beta for Kaiser window
if A > 50
    beta = 0.1102 * (A - 8.7);
elseif A >= 21
    beta = 0.5842 * (A - 21)^0.4 + 0.07886 * (A - 21);
else
    beta = 0;
end

% Calculate the minimum filter order
N = ceil((A - 8) / (2.285 * delta_f * pi));

% Design the FIR filter using the Kaiser window
b = fir1(N, Wp, kaiser(N+1, beta));

% Frequency response of the filter
[H, f] = freqz(b, 1, 1024, Fs);

% Plot the magnitude response
figure;
plot(f, 20*log10(abs(H)), 'LineWidth', 1.5);
title('High-Order FIR Lowpass Filter Frequency Response');
xlabel('Frequency (Hz)');
ylabel('Magnitude (dB)');
grid on;
ylim([-80, 5]);
xlim([0, Fs / 2]);

% Display the filter order
disp(['The filter order is: ', num2str(N)]);
